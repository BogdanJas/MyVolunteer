@page "/signedlist"
@inject IProjectSignUpRepository _projectSignUpRepository
@inject NavigationManager _navigationManager

<div>
    <h4 class="card-title text-info">SignUp's List</h4>
 @if (IsLoading)
{
    <div class="text-center">
        <img src="/images/loading.gif">
    </div>
}
else
{

        <SfGrid @ref="ProjectSignUpGrid" DataSource="@ProjectSignUps" AllowPaging="true" AllowFiltering="true" AllowSorting="true">
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
            <GridPageSettings PageSize="5" PageCount="5" PageSizes="true"></GridPageSettings>
            <GridColumns>
                <GridColumn IsPrimaryKey="true" AllowAdding="false" Field=@nameof(ProjectSignUpDTO.Id) HeaderText="ID" Visible="false"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.ProjectName) HeaderText="Project name"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.ProjectStartDate) HeaderText="Project start date" Format="d" Type="ColumnType.Date"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.ProjectEndDate) HeaderText="Project end date" Format="d" Type="ColumnType.Date"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.VolunteerName) HeaderText="Volunteer name"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.VolunteerDateOfBirth) HeaderText="Date of Birth" Format="d" Type="ColumnType.Date" Width="130"></GridColumn>
                <GridColumn Field=@nameof(Male) HeaderText="Gender"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.VolunteerEmail) HeaderText="Email"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.VolunteerPhoneNumber) HeaderText="Phone number"></GridColumn>
                <GridColumn Field=@nameof(ProjectSignUpDTO.SignDate) HeaderText="Sign Date" Format="d" Type="ColumnType.Date" Width="130"></GridColumn>
            </GridColumns>
        </SfGrid>
}
</div>


@code {

    public SfGrid<ProjectSignUpDTO> ProjectSignUpGrid;
    private IEnumerable<ProjectSignUpDTO> ProjectSignUps { get; set; } = new List<ProjectSignUpDTO>();
    private bool IsLoading { get; set; } = true;
    public string Male = "Male";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoading = true;
            StateHasChanged();
            ProjectSignUps = await _projectSignUpRepository.GetAll();
            IsLoading = false;
            StateHasChanged();
        }
    }
}