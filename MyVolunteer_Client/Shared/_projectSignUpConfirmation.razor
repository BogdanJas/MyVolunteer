<div class="modal fade" data-backdrop="static" data-keyboard="false" id="projectSignUpConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Sign up</h5>
                <button type="button" @onclick="()=>OnConfirmationSignUp(false)"  class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to SignUp?
            </div>
            @if (IsParentComponentProcessing)
            {
            <div class="modal-footer">
                <button type="button" disabled class="btn btn-secondary" data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button" disabled class="btn btn-danger">
                    Processing...
                </button>
            </div>    
            }
            else{
            <div class="modal-footer">
                <button type="button" @onclick="()=>OnConfirmationSignUp(false)"  class="btn btn-secondary" data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button" @onclick="()=>OnConfirmationSignUp(true)" class="btn btn-success">
                    Sign Up
                </button>
            </div>
            }
        </div>
    </div>
</div>

@code{

    [Parameter]
    public bool IsParentComponentProcessing { get; set; }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    private async Task OnConfirmationSignUp(bool value)
    {
        if (value)
        {
            await ConfirmationChanged.InvokeAsync(value);
        }
    }

}